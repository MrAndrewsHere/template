x-app: &x-app
    build:
        context: .
        dockerfile: ./docker/app/Dockerfile
    env_file:
        - .env
    container_name: ${APP_NAMESPACE}-app
    depends_on:
        - db
        - redis
    networks:
        - site_network

services:
    app:
        <<: *x-app
        #        user: "${UID:-1000}:${GID:-1000}"
        ports:
            - "80:80"
#            - "443:443"
            - "2019:2019" # Caddy admin endpoint
        restart: unless-stopped
        environment:
            - CADDY_ADMIN=0.0.0.0:2019
        volumes:
            - .:/var/www/html
            - ./docker/supervisor/common.conf:/etc/supervisor/common.conf
            - ./docker/supervisor/dev.conf:/etc/supervisor/conf.d/supervisord.conf
            - ./docker/app/php.ini:/usr/local/etc/php/php.ini
            - ./Caddyfile:/etc/caddy/Caddyfile

        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost" ]
            interval: 3s
            timeout: 3s
            retries: 3
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy
    db:
        image: postgres:latest
        env_file:
            - .env
        container_name: ${APP_NAMESPACE}-db
        restart: unless-stopped
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        networks:
            - site_network
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U postgres" ]
            interval: 2s
            timeout: 3s
            retries: 3


    redis:
        image: redis:latest
        container_name: ${APP_NAMESPACE}-redis
        restart: unless-stopped
        ports:
            -   "6379:6379"
        volumes:
            - redis_data:/data
        env_file:
            - .env
        networks:
            - site_network
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            interval: 2s
            timeout: 3s
            retries: 3

volumes:
    postgres_data:
        driver: local
    redis_data:
        driver: local
networks:
    site_network:
